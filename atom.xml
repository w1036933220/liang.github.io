<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Liang的个人博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://liang5757.github.io/"/>
  <updated>2020-07-29T07:24:43.758Z</updated>
  <id>https://liang5757.github.io/</id>
  
  <author>
    <name>Liang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>WordCount (Python)</title>
    <link href="https://liang5757.github.io/2020/07/28/WordCount-Python/"/>
    <id>https://liang5757.github.io/2020/07/28/WordCount-Python/</id>
    <published>2020-07-28T13:44:44.000Z</published>
    <updated>2020-07-29T07:24:43.758Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WordCount-Python"><a href="#WordCount-Python" class="headerlink" title="WordCount (Python)"></a>WordCount (Python)</h1><h3 id="Github项目地址：https-github-com-w1036933220-WordCount"><a href="#Github项目地址：https-github-com-w1036933220-WordCount" class="headerlink" title="Github项目地址：https://github.com/w1036933220/WordCount"></a>Github项目地址：<a href="https://github.com/w1036933220/WordCount" target="_blank" rel="noopener">https://github.com/w1036933220/WordCount</a></h3><h2 id="一、解题思路"><a href="#一、解题思路" class="headerlink" title="一、解题思路"></a>一、解题思路</h2><ol><li>把项目需求理清楚，画一个思维导图</li></ol><p><img src= "/img/loading.gif" data-src="/2020/07/28/WordCount-Python/image-20200318234358738.png" alt="image-20200318234358738"></p><ol start="2"><li>考虑各部分功能所需要的大概实现思路</li></ol><p><img src= "/img/loading.gif" data-src="/2020/07/28/WordCount-Python/image-20200318234452134.png" alt="image-20200318234452134"></p><ol start="3"><li>然后完成了计算文件属性的算法部分</li><li>再回头想对指令的解析问题，顺带添加了递归处理多个文件的功能</li><li>查python的os库文档，最后决定用os.walk读取当前文件夹内的所有文件夹和文件，替换掉输入的*和?通配符，再进行匹配</li></ol><h2 id="三、设计实现过程及代码说明"><a href="#三、设计实现过程及代码说明" class="headerlink" title="三、设计实现过程及代码说明"></a>三、设计实现过程及代码说明</h2><ol><li>main.py（入口文件）</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> utils.utils <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    command = input(<span class="string">"请输入命令(wc.exe [parameter] &#123;file_name&#125;):\n"</span>)</span><br><span class="line"></span><br><span class="line">parse_command(command)</span><br></pre></td></tr></table></figure><ol start="2"><li>orders.py<br> 存放指令集，和输出各类数据的函数</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> utils.count <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> views.main_view <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出字符数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_char_num</span><span class="params">(text)</span>:</span></span><br><span class="line">print(<span class="string">"字符数："</span> + str(FileProperties(text).count_char_num()))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出单词数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_word_num</span><span class="params">(text)</span>:</span></span><br><span class="line">print(<span class="string">"词数："</span> + str(FileProperties(text).count_word_num()))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出行数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_line_num</span><span class="params">(text)</span>:</span></span><br><span class="line">print(<span class="string">"行数："</span> + str(FileProperties(text).count_line_num()))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出代码行/空行/注释行</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_code_property</span><span class="params">(text)</span>:</span></span><br><span class="line">    file_properties = FileProperties(text)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"空行："</span> + str(file_properties.count_null_line_num()))</span><br><span class="line">    print(<span class="string">"注释行："</span> + str(file_properties.count_annotation_line_num()))</span><br><span class="line">    print(<span class="string">"代码行："</span> + str(file_properties.count_code_line_num()))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 调出图形界面</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">draw_view</span><span class="params">()</span>:</span></span><br><span class="line">root = MainView(tk.Tk())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_error</span><span class="params">()</span>:</span></span><br><span class="line">print(<span class="string">"指令输入错误"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 单指令命令集</span></span><br><span class="line">orders = &#123;</span><br><span class="line">    <span class="string">'-c'</span>: print_char_num,</span><br><span class="line"></span><br><span class="line">    <span class="string">'-w'</span>: print_word_num,</span><br><span class="line"></span><br><span class="line">    <span class="string">"-l"</span>: print_line_num,</span><br><span class="line"></span><br><span class="line">    <span class="string">"-a"</span>: print_code_property,</span><br><span class="line"></span><br><span class="line">    <span class="string">"-s"</span>: print_error,</span><br><span class="line"></span><br><span class="line">    <span class="string">"-x"</span>: draw_view</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>utils.py<br> 放置解析指令、读取文件、模糊搜素的函数</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> utils.orders <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># description：parse command</span></span><br><span class="line"><span class="comment"># param：order input</span></span><br><span class="line"><span class="comment"># return：[order, [file_list]] / FALSE</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_command</span><span class="params">(command)</span>:</span></span><br><span class="line">    command = command.strip().split(<span class="string">" "</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 指令若为空或者起始不为wc.exe则报错</span></span><br><span class="line">    <span class="keyword">if</span> command == [] <span class="keyword">or</span> command[<span class="number">0</span>] != <span class="string">"wc.exe"</span>:</span><br><span class="line">        print(<span class="string">"指令输入错误"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 打开图形界面的指令(一级指令)</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">"-x"</span> <span class="keyword">in</span> command:</span><br><span class="line">        orders.get(<span class="string">"-x"</span>)</span><br><span class="line">    <span class="keyword">elif</span> len(command) &gt; <span class="number">2</span>:</span><br><span class="line">        order = command[<span class="number">-2</span>]</span><br><span class="line">        file_name = command[<span class="number">-1</span>]</span><br><span class="line">        file_list = get_file_list(file_name)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 递归调用的指令</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">"-s"</span> <span class="keyword">in</span> command:</span><br><span class="line">            <span class="keyword">if</span> file_list:</span><br><span class="line">                <span class="keyword">for</span> file <span class="keyword">in</span> file_list:</span><br><span class="line">                    print(file + <span class="string">":"</span>)</span><br><span class="line">                    text = read_file(file)</span><br><span class="line">                    orders.get(order)(text)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(file_list[<span class="number">0</span>] + <span class="string">":"</span>)</span><br><span class="line">            text = read_file(file_name)</span><br><span class="line">            orders.get(order)(text)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"指令输入错误"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取目录下符合条件的文件名</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_file_list</span><span class="params">(file_name)</span>:</span></span><br><span class="line">    <span class="comment"># 最终构建的文件列表</span></span><br><span class="line">    file_list = []</span><br><span class="line">    <span class="comment"># 匹配到的文件夹列表、需二次处理</span></span><br><span class="line">    dir_list = []</span><br><span class="line"></span><br><span class="line">    file_name = file_name.replace(<span class="string">"?"</span>, <span class="string">"\\S"</span>).replace(<span class="string">"*"</span>, <span class="string">"\\S+"</span>)</span><br><span class="line">    file_name += <span class="string">"$"</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> os.walk(<span class="string">"."</span>, topdown=<span class="literal">False</span>):</span><br><span class="line">        <span class="keyword">for</span> name <span class="keyword">in</span> files:</span><br><span class="line">            <span class="keyword">if</span> re.match(file_name, name):</span><br><span class="line">                file_list.append(os.path.join(root, name))</span><br><span class="line">        <span class="keyword">for</span> name <span class="keyword">in</span> dirs:</span><br><span class="line">            <span class="keyword">if</span> re.match(file_name, name):</span><br><span class="line">                dir_list.append(os.path.join(os.getcwd() + os.sep, name))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果文件夹非空，则继续收集</span></span><br><span class="line">    <span class="keyword">if</span> dir_list:</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> dir_list:</span><br><span class="line">            all_file = os.listdir(item)</span><br><span class="line">            <span class="keyword">for</span> file <span class="keyword">in</span> all_file:</span><br><span class="line">                <span class="comment"># 文件的完整路径</span></span><br><span class="line">                file_path = item + os.sep + file</span><br><span class="line">                <span class="keyword">if</span> os.path.isfile(file_path):</span><br><span class="line">                    file_list.append(file_path)</span><br><span class="line"></span><br><span class="line">    print(file_list)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> file_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># description：read files</span></span><br><span class="line"><span class="comment"># param：file_list</span></span><br><span class="line"><span class="comment"># return：file content</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_file</span><span class="params">(file)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(file, <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">return</span> f.readlines()</span><br></pre></td></tr></table></figure><ol start="4"><li>count.py<br> 存放计算文件属性的类</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileProperties</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, file_text)</span>:</span></span><br><span class="line">        self.file_text = file_text</span><br><span class="line">        <span class="comment"># 字符数</span></span><br><span class="line">        self.char_num = <span class="number">0</span></span><br><span class="line">        <span class="comment"># 单词数</span></span><br><span class="line">        self.word_num = <span class="number">0</span></span><br><span class="line">        <span class="comment"># 行数</span></span><br><span class="line">        self.line_num = len(file_text)</span><br><span class="line">        <span class="comment"># 空行</span></span><br><span class="line">        self.null_line_num = <span class="number">0</span></span><br><span class="line">        <span class="comment"># 代码行</span></span><br><span class="line">        self.code_line_num = <span class="number">0</span></span><br><span class="line">        <span class="comment"># 注释行数</span></span><br><span class="line">        self.annotation_line_num = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算字符数</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">count_char_num</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> self.file_text:</span><br><span class="line">            self.char_num += len(line.strip())</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.char_num</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算单词数</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">count_word_num</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> self.file_text:</span><br><span class="line">            <span class="comment"># 正则匹配一行中的所有单词，并计算单词数</span></span><br><span class="line">            self.word_num += len(re.findall(<span class="string">r'[a-zA-Z0-9]+[\-\']?[a-zA-Z]*'</span>, line))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.word_num</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算行数</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">count_line_num</span><span class="params">(self)</span>:</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.line_num</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算空行数</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">count_null_line_num</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> self.file_text:</span><br><span class="line">            <span class="comment"># 只有不超过一个可显示的字符</span></span><br><span class="line">            <span class="keyword">if</span> len(re.findall(<span class="string">r'\S'</span>, line)) &lt;= <span class="number">1</span>:</span><br><span class="line">                self.null_line_num += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.null_line_num</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算代码行</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">count_code_line_num</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.line_num - self.null_line_num - self.annotation_line_num</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算注释行</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">count_annotation_line_num</span><span class="params">(self)</span>:</span></span><br><span class="line">        flag = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> self.file_text:</span><br><span class="line">            line = line.strip()</span><br><span class="line">            <span class="comment"># 匹配不是代码行且有//</span></span><br><span class="line">            <span class="keyword">if</span> re.match(<span class="string">r'^\S?\s*?\/\/'</span>, line):</span><br><span class="line">                self.annotation_line_num += <span class="number">1</span></span><br><span class="line">            <span class="comment"># 匹配不是代码行且有/*</span></span><br><span class="line">            <span class="keyword">elif</span> re.match(<span class="string">r'^\S?\s*?\/\*'</span>, line):</span><br><span class="line">                flag = <span class="number">1</span></span><br><span class="line">                self.annotation_line_num += <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> line.endswith(<span class="string">'*/'</span>):</span><br><span class="line">                    flag = <span class="number">0</span></span><br><span class="line">            <span class="keyword">elif</span> flag == <span class="number">1</span>:</span><br><span class="line">                self.annotation_line_num += <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> <span class="string">"*/"</span> <span class="keyword">in</span> line:</span><br><span class="line">                self.annotation_line_num += <span class="number">1</span></span><br><span class="line">                flag = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.annotation_line_num</span><br></pre></td></tr></table></figure><p>5.main_view.py(新增)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> ttk</span><br><span class="line"><span class="keyword">import</span> tkinter.filedialog</span><br><span class="line"><span class="keyword">from</span> utils.utils <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> utils.count <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainView</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, window)</span>:</span></span><br><span class="line">        self.window = window</span><br><span class="line">        self.window.title(<span class="string">"这是船新的版本！"</span>)</span><br><span class="line">        self.window.geometry(<span class="string">"540x290"</span>)</span><br><span class="line">        self.data_tree = ttk.Treeview(self.window, show=<span class="string">"headings"</span>)</span><br><span class="line">        self.creat_view()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">creat_view</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 选择文件按钮</span></span><br><span class="line">        btn = tk.Button(self.window, text=<span class="string">"选择文件"</span>, command=self.file_choose).place(x=<span class="number">240</span>, y=<span class="number">247</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 文件数据显示表格</span></span><br><span class="line">        self.data_tree.place(x=<span class="number">8</span>, y=<span class="number">8</span>)</span><br><span class="line">        <span class="comment"># 定义列</span></span><br><span class="line">        self.data_tree[<span class="string">"columns"</span>] = (<span class="string">"文件名"</span>, <span class="string">"字符数"</span>, <span class="string">"单词数"</span>, <span class="string">"行数"</span>, <span class="string">"空行数"</span>, <span class="string">"代码行数"</span>, <span class="string">"注释行数"</span>)</span><br><span class="line">        <span class="comment"># 设置列属性，列不显示</span></span><br><span class="line">        self.data_tree.column(<span class="string">"文件名"</span>, width=<span class="number">100</span>)</span><br><span class="line">        self.data_tree.column(<span class="string">"字符数"</span>, width=<span class="number">70</span>)</span><br><span class="line">        self.data_tree.column(<span class="string">"单词数"</span>, width=<span class="number">70</span>)</span><br><span class="line">        self.data_tree.column(<span class="string">"行数"</span>, width=<span class="number">70</span>)</span><br><span class="line">        self.data_tree.column(<span class="string">"空行数"</span>, width=<span class="number">70</span>)</span><br><span class="line">        self.data_tree.column(<span class="string">"代码行数"</span>, width=<span class="number">70</span>)</span><br><span class="line">        self.data_tree.column(<span class="string">"注释行数"</span>, width=<span class="number">70</span>)</span><br><span class="line">        <span class="comment"># 设置表头</span></span><br><span class="line">        self.data_tree.heading(<span class="string">"文件名"</span>, text=<span class="string">"文件名"</span>)</span><br><span class="line">        self.data_tree.heading(<span class="string">"字符数"</span>, text=<span class="string">"字符数"</span>)</span><br><span class="line">        self.data_tree.heading(<span class="string">"单词数"</span>, text=<span class="string">"单词数"</span>)</span><br><span class="line">        self.data_tree.heading(<span class="string">"行数"</span>, text=<span class="string">"行数"</span>)</span><br><span class="line">        self.data_tree.heading(<span class="string">"空行数"</span>, text=<span class="string">"空行数"</span>)</span><br><span class="line">        self.data_tree.heading(<span class="string">"代码行数"</span>, text=<span class="string">"代码行数"</span>)</span><br><span class="line">        self.data_tree.heading(<span class="string">"注释行数"</span>, text=<span class="string">"注释行数"</span>)</span><br><span class="line"></span><br><span class="line">        self.window.mainloop()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">file_choose</span><span class="params">(self)</span>:</span></span><br><span class="line">        file_list = tk.filedialog.askopenfilenames()</span><br><span class="line">        <span class="keyword">for</span> index, file <span class="keyword">in</span> enumerate(file_list):</span><br><span class="line">            text = read_file(file)</span><br><span class="line">            [char_num, word_num, line_num, null_line_num, code_line_num,</span><br><span class="line">             annotation_line_num] = FileProperties(text).all_count()</span><br><span class="line">            file = file.split(<span class="string">"/"</span>)[<span class="number">-1</span>]</span><br><span class="line">            self.data_tree.insert(<span class="string">''</span>, index, values=(file, char_num, word_num, line_num,</span><br><span class="line">                                                 null_line_num, code_line_num, annotation_line_num))</span><br></pre></td></tr></table></figure><h2 id="五、PSP表格"><a href="#五、PSP表格" class="headerlink" title="五、PSP表格"></a>五、PSP表格</h2><table><thead><tr><th>PSP2.1</th><th>Personal Software Process Stages</th><th>预估耗时（分钟）</th><th>实际耗时（分钟）</th></tr></thead><tbody><tr><td>Planning</td><td>计划</td><td>10</td><td>8</td></tr><tr><td>· Estimate</td><td>· 估计这个任务需要多少时间</td><td>10</td><td>8</td></tr><tr><td>Development</td><td>开发</td><td>460</td><td>610</td></tr><tr><td>· Analysis</td><td>· 需求分析 (包括学习新技术)</td><td>120</td><td>200</td></tr><tr><td>· Design Spec</td><td>· 生成设计文档</td><td>90</td><td>60</td></tr><tr><td>· Design Review</td><td>· 设计复审 (和同事审核设计文档)</td><td>5</td><td>5</td></tr><tr><td>· Coding Standard</td><td>· 代码规范 (为目前的开发制定合适的规范)</td><td>5</td><td>0</td></tr><tr><td>· Design</td><td>· 具体设计</td><td>120</td><td>100</td></tr><tr><td>· Coding</td><td>· 具体编码</td><td>90</td><td>200</td></tr><tr><td>· Code Review</td><td>· 代码复审</td><td>10</td><td>30</td></tr><tr><td>· Test</td><td>· 测试（自我测试，修改代码，提交修改）</td><td>20</td><td>15</td></tr><tr><td>Reporting</td><td>报告</td><td>30</td><td>32</td></tr><tr><td>· Test Report</td><td>· 测试报告</td><td>10</td><td>12</td></tr><tr><td>· Size Measurement</td><td>· 计算工作量</td><td>10</td><td>5</td></tr><tr><td>· Postmortem &amp; Process Improvement Plan</td><td>· 事后总结, 并提出过程改进计划</td><td>10</td><td>8</td></tr><tr><td>合计</td><td></td><td>355</td><td>630</td></tr></tbody></table><h2 id="六、测试运行"><a href="#六、测试运行" class="headerlink" title="六、测试运行"></a>六、测试运行</h2><p><img src= "/img/loading.gif" data-src="/2020/07/28/WordCount-Python/image-20200324233229734.png" alt="image-20200324233229734"></p><p><img src= "/img/loading.gif" data-src="/2020/07/28/WordCount-Python/image-20200324233138984.png" alt="image-20200324233138984"></p><p>图形界面测试（新增）</p><p><img src= "/img/loading.gif" data-src="/2020/07/28/WordCount-Python/image-20200325013347708.png" alt="image-20200325013347708"></p><p><img src= "/img/loading.gif" data-src="/2020/07/28/WordCount-Python/image-20200325020159689.png" alt="image-20200325020159689"></p><h2 id="七、总结"><a href="#七、总结" class="headerlink" title="七、总结"></a>七、总结</h2><ol><li>太久没写python了，发现居然没有switch这个语句，百度查到了表驱动这个东西</li><li>用时与预计的出入有点大</li><li>输入验证处理没有做完全，图形界面没时间做了（过了大半年遗忘率确实高）</li><li>写的时候发现python有些问题不知道是bug还是什么</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">orders = &#123;</span><br><span class="line">    <span class="string">'-c'</span>: print_char_num,</span><br><span class="line">    <span class="string">'-w'</span>: print_word_num,</span><br><span class="line">    <span class="string">"-l"</span>: print_line_num,</span><br><span class="line">    <span class="string">"-a"</span>: print_code_property,</span><br><span class="line">    <span class="string">"-s"</span>: print_error,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是我的指令集，如果把他写成像js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">orders = &#123;</span><br><span class="line">    <span class="string">'-c'</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 某些操作</span></span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>python不管会不会用到这个指令集，都会把字典中的值执行一遍，所以只能放函数名，js就不会</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;WordCount-Python&quot;&gt;&lt;a href=&quot;#WordCount-Python&quot; class=&quot;headerlink&quot; title=&quot;WordCount (Python)&quot;&gt;&lt;/a&gt;WordCount (Python)&lt;/h1&gt;&lt;h3 id=&quot;Githu
      
    
    </summary>
    
    
      <category term="软件工程" scheme="https://liang5757.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
    
      <category term="项目" scheme="https://liang5757.github.io/tags/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>仿网易云音乐的对话气泡框</title>
    <link href="https://liang5757.github.io/2020/07/17/%E4%BB%BF%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E7%9A%84%E5%AF%B9%E8%AF%9D%E6%B0%94%E6%B3%A1%E6%A1%86/"/>
    <id>https://liang5757.github.io/2020/07/17/%E4%BB%BF%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E7%9A%84%E5%AF%B9%E8%AF%9D%E6%B0%94%E6%B3%A1%E6%A1%86/</id>
    <published>2020-07-16T17:16:34.000Z</published>
    <updated>2020-07-29T07:13:54.623Z</updated>
    
    <content type="html"><![CDATA[<p>主要就是对话框小三角的实现，效果如下</p><p><img src= "/img/loading.gif" data-src="/2020/07/17/%E4%BB%BF%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E7%9A%84%E5%AF%B9%E8%AF%9D%E6%B0%94%E6%B3%A1%E6%A1%86/1.png" alt="1"></p><p>主要难点就是三角形的实现，有两种思路，一种是利用<strong>border</strong>，网易云音乐是用<strong>两个 ◆ 层叠显示边框</strong>的，下面是核心代码</p><h3 id="html"><a href="#html" class="headerlink" title="html"></a>html</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"comment"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"darr"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"bd"</span>&gt;</span>◆<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"bg"</span>&gt;</span>◆<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>liang<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    ：<span class="tag">&lt;<span class="name">span</span>&gt;</span>嘤嘤嘤呀呀呀呀呀呀晕晕晕晕<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="css"><a href="#css" class="headerlink" title="css"></a>css</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.comment</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f4f4f4</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: left;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#dedede</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.darr</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: -<span class="number">7px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">14px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">i</span> &#123;</span><br><span class="line">    <span class="attribute">font-style</span>: normal;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bg</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#f4f4f4</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">1px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 边框</span><br><span class="line"><span class="selector-class">.bd</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#dedede</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;主要就是对话框小三角的实现，效果如下&lt;/p&gt;
&lt;p&gt;&lt;img src= &quot;/img/loading.gif&quot; data-src=&quot;/2020/07/17/%E4%BB%BF%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E7%9A
      
    
    </summary>
    
    
      <category term="前端" scheme="https://liang5757.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="CSS" scheme="https://liang5757.github.io/tags/CSS/"/>
    
  </entry>
  
</feed>
